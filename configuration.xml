<com.egtinteractive.config.Config>
  <serviceConfigs class="linked-list">
    <com.egtinteractive.config.ServiceConfig>
      <fileNamePrefix>thanos</fileNamePrefix>
      <parser class="com.egtinteractive.app.parsers.ResponseTimeDomaneParser">
        <patternDomane>
          <pattern>HTTP\sNative\sexecute\s(http://.*?)=&gt;\s([0-9]{1,})</pattern>
          <flags>0</flags>
        </patternDomane>
        <patternTime>
          <pattern>\[([0-9]{1,2}\s[a-zA-Z]{3,12}\s[0-9]{4}\s[0-9]{2}:[0-9]{2}:[0-9]{2},[0-9]{3})\]</pattern>
          <flags>0</flags>
        </patternTime>
        <dateTimeFormat>dd MMMM yyyy HH:mm:ss,SSS</dateTimeFormat>
        <isInProgress>false</isInProgress>
        <time>-1</time>
      </parser>
      <writer class="com.egtinteractive.app.writers.InfluxWriter">
        <pointPerBatch>1500</pointPerBatch>
        <hostCreateDBQueryParams>q=CREATE DATABASE someDb3</hostCreateDBQueryParams>
        <urlCreateDBQuery>http://localhost:8086/query</urlCreateDBQuery>
        <urlInsertDataQuery>http://localhost:8086/write?db=someDb3</urlInsertDataQuery>
        <isDatabaseCreated>false</isDatabaseCreated>
        <writtenPointsCounter>0</writtenPointsCounter>
      </writer>
    </com.egtinteractive.config.ServiceConfig>
    <com.egtinteractive.config.ServiceConfig>
      <fileNamePrefix>gamora</fileNamePrefix>
      <parser class="com.egtinteractive.app.parsers.ResponseTimeDomaneParser">
        <patternDomane>
          <pattern>HTTP\sNative\sexecute\s(http://.*?)=&gt;\s([0-9]{1,})</pattern>
          <flags>0</flags>
        </patternDomane>
        <patternTime>
          <pattern>\[([0-9]{1,2}\s[a-zA-Z]{3,12}\s[0-9]{4}\s[0-9]{2}:[0-9]{2}:[0-9]{2},[0-9]{3})\]</pattern>
          <flags>0</flags>
        </patternTime>
        <dateTimeFormat>dd MMMM yyyy HH:mm:ss,SSS</dateTimeFormat>
        <isInProgress>false</isInProgress>
        <time>-1</time>
      </parser>
      <writer class="com.egtinteractive.app.writers.InfluxWriter">
        <pointPerBatch>1500</pointPerBatch>
        <hostCreateDBQueryParams>q=CREATE DATABASE otherDb3</hostCreateDBQueryParams>
        <urlCreateDBQuery>http://localhost:8086/query</urlCreateDBQuery>
        <urlInsertDataQuery>http://localhost:8086/write?db=otherDb3</urlInsertDataQuery>
        <isDatabaseCreated>false</isDatabaseCreated>
        <writtenPointsCounter>0</writtenPointsCounter>
      </writer>
    </com.egtinteractive.config.ServiceConfig>
  </serviceConfigs>
  <logFileName>file-parser-logs.log</logFileName>
  <workingDirectory>/big_device/veto</workingDirectory>
  <recoveryManager>
    <connectionPool>
      <jdbcDatabaseUrl>jdbc:mysql://localhost:3306/file_reader?useSSL=false</jdbcDatabaseUrl>
      <dbUser>root</dbUser>
      <dbPassword>3569</dbPassword>
      <poolSize>7</poolSize>
    </connectionPool>
    <filesAlreadySeen class="java.util.concurrent.ConcurrentHashMap$KeySetView">
      <map/>
      <value class="boolean">true</value>
    </filesAlreadySeen>
  </recoveryManager>
  <logger class="com.egtinteractive.app.moduls.logger.Log4jLogger">
    <propertiesFile>log4j.properties</propertiesFile>
    <logFileName>file-parser-logs.log</logFileName>
  </logger>
</com.egtinteractive.config.Config>